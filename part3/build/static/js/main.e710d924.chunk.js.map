{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","SuccessNotification","message","className","ErrorNotification","errorMessage","Person","name","number","handleAction","onClick","Persons","namesToShow","map","person","Filter","text","onChange","Form","addPerson","newName","handleName","newNumber","handleNumber","onSubmit","value","type","App","useState","persons","setPersons","setNewName","setNewNumber","showAll","setShowAll","filter","setFilter","setMessage","setErrorMessage","useEffect","personService","initalPersons","toUpperCase","includes","event","target","preventDefault","i","trim","confirm","window","updatedObject","console","log","changedPerson","setTimeout","catch","error","JSON","stringify","length","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"6LACMA,EAAU,eAqBD,EAnBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAdA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,EATM,SAACG,GACpB,OAAOP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,KAQrB,EALA,SAACA,EAAIF,GAElB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OC+HrCM,EAAsB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC5B,OAAc,MAAXA,EACM,KAIP,qBAAKC,UAAU,UAAf,SACGD,KAKDE,EAAoB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAC1B,OAAmB,MAAhBA,EACM,KAIP,qBAAKF,UAAU,QAAf,SACGE,KAKDC,EAAS,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAC7B,OACE,gCACE,iCAAOF,EAAP,IAAcC,KACd,wBAAQE,QAASD,EAAjB,wBAMAE,EAAU,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaH,EAAkB,EAAlBA,aAC7B,OACEG,EAAYC,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAAwBP,KAAMO,EAAOP,KAAMC,OAAQM,EAAON,OAAQC,aAAc,kBAAMA,EAAaK,EAAOhB,GAAIgB,EAAOP,QAAxGO,EAAOhB,QAI9CiB,EAAS,SAAC,GAA0B,IAAzBN,EAAwB,EAAxBA,aAAcO,EAAU,EAAVA,KAC7B,OACE,8BAAG,+BAAOA,IAAY,uBACtBC,SAAYR,QAKVS,EAAO,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACxD,OACE,uBAAMC,SAAYL,EAAlB,UACI,yCACQ,uBAAOM,MAAOL,EACZH,SAAYI,OAGtB,2CACU,uBAAOI,MAAOH,EACdL,SAAUM,OAGpB,8BACE,wBAAQG,KAAK,SAAb,uBAMKC,EAnNH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBW,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAON,EAAP,KAAkBU,EAAlB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA8BR,mBAAS,MAAvC,mBAAO1B,EAAP,KAAgBmC,EAAhB,KACA,EAAwCT,mBAAS,MAAjD,mBAAOvB,EAAP,KAAqBiC,EAArB,KAEAC,qBAAU,WACRC,IAEG/C,MAAK,SAAAgD,GACJX,EAAWW,QAGd,IAEH,IAAM7B,EAAcqB,EAAUJ,EAC5BA,EAAQM,QAAO,SAAArB,GAAM,OAAIA,EAAOP,KAAKmC,cAAcC,SAASR,EAAOO,kBA8GrE,OACE,gCACE,2CACA,cAAC,EAAD,CAAqBxC,QAASA,IAC9B,cAAC,EAAD,CAAmBG,aAAcA,IAC/B,cAAC,EAAD,CAAQW,KAAK,oBAAoBP,aA5BlB,SAACmC,GACpBR,EAAUQ,EAAMC,OAAOpB,OACPS,EAAL,KAAXC,MA2BI,2CACF,cAAC,EAAD,CAAMhB,UAlHQ,SAACyB,GACjBA,EAAME,iBAGN,IADA,IAAI3B,GAAY,EAHW,WAInB4B,GACN,GAAGlB,EAAQkB,GAAGxC,KAAKmC,gBAAmBtB,EAAQsB,cAAcM,OAAQ,CAClE,IAAMC,EAAUC,OAAOD,QAAP,UAAkBpB,EAAQkB,GAAGxC,KAA7B,yEACV4C,EAAa,2BAAOtB,EAAQkB,IAAf,IAAmBvC,OAAQc,IAE3C2B,GACD9B,GAAY,EACZiC,QAAQC,IAAI,SACZb,EACUX,EAAQkB,GAAGjD,GAAIqD,GACtB1D,MAAK,SAAA6D,GACJxB,EAAWD,EAAQhB,KAAI,SAAAC,GAAM,OAAIA,EAAOhB,KAAOwD,EAAcxD,GAAKgB,EAASwC,MAC3EjB,EAAW,GAAD,OAAIR,EAAQkB,GAAGxC,KAAf,+BACVgD,YAAW,WACTlB,EAAW,QACV,KACHN,EAAW,IACXC,EAAa,OAEhBwB,OAAM,SAAAC,GACkC,oBAAnCA,EAAM/D,SAASC,KAAK8D,MAAMlD,MAC5B+B,EAAgB,GAAD,OAAIoB,KAAKC,UAAUF,EAAM/D,SAASC,KAAK8D,MAAMvD,WAC5DkD,QAAQC,IAAII,EAAM/D,SAASC,KAAK8D,MAAMvD,SACtCqD,YAAW,WACTjB,EAAgB,QACf,KACHP,EAAW,IACXC,EAAa,MAGbM,EAAgB,GAAD,OAAIa,EAAc5C,KAAlB,4CACf6C,QAAQC,IAAII,EAAM/D,SAASC,KAAK8D,MAAMlD,MACtCgD,YAAW,WACTjB,EAAgB,QACf,KACHR,EAAWD,EAAQM,QAAO,SAAArB,GAAM,OAAIA,EAAOhB,KAAOqD,EAAcrD,OAChEiC,EAAW,IACXC,EAAa,UAKjBb,GAAY,EACZY,EAAW,IACXC,EAAa,OA5CXe,EAAI,EAAGA,EAAIlB,EAAQ+B,OAAQb,IAAK,EAAhCA,GAiDL5B,GAEDqB,EADmB,CAACjC,KAAMa,EAASZ,OAAQc,IAGxC7B,MAAK,SAAAoE,GACJ/B,EAAWD,EAAQiC,OAAOD,IAC1BxB,EAAW,GAAD,OAAIjB,EAAJ,iCACVmC,YAAW,WACTlB,EAAW,QACV,KACHN,EAAW,IACXC,EAAa,OAEdwB,OAAM,SAAAC,GACLnB,EAAgB,GAAD,OAAIoB,KAAKC,UAAUF,EAAM/D,SAASC,KAAK8D,MAAMvD,WAE5DqD,YAAW,WACTjB,EAAgB,QACf,KACHP,EAAW,IACXC,EAAa,QAyCWV,UAAWA,EAAWC,aAhCjC,SAACqB,GAAD,OAAWZ,EAAaY,EAAMC,OAAOpB,QAgCwBL,QAASA,EAASC,WAlCjF,SAACuB,GAAD,OAAWb,EAAWa,EAAMC,OAAOpB,UAmClD,yCACE,cAAC,EAAD,CAASb,YAAaA,EAAaH,aA3BpB,SAACX,EAAIS,GACR2C,OAAOD,QAAP,iBAAyB1C,EAAzB,OAGdiC,EACgB1C,GACbL,MAAK,WACJqC,EAAWD,EAAQM,QAAO,SAAArB,GAAM,OAAIA,EAAOhB,KAAOA,MAClDwC,EAAgB,GAAD,OAAI/B,EAAJ,oCACfgD,YAAW,WACTjB,EAAgB,QACf,QAIPR,EAAWD,U,MC7HjBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e710d924.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, deletePerson, update}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initalPersons => {\n        setPersons(initalPersons)\n      })\n      \n  }, [])\n \n  const namesToShow = showAll ? persons : (\n    persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))\n  )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    let addPerson = true;\n    for(let i = 0; i < persons.length; i++){\n      if(persons[i].name.toUpperCase() === (newName.toUpperCase().trim())){\n        const confirm = window.confirm(`${persons[i].name} already exists in phonebook, replace the old number with a new one?`)\n        const updatedObject = {...persons[i], number: newNumber}  \n         \n        if(confirm){\n          addPerson = false;\n          console.log(\"Works\")\n          personService\n            .update(persons[i].id, updatedObject)\n            .then(changedPerson => {  \n              setPersons(persons.map(person => person.id !== changedPerson.id ? person : changedPerson))\n              setMessage(`${persons[i].name}'s number has been updated`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n              setNewName('')\n              setNewNumber('')\n          })\n          .catch(error => {\n            if( error.response.data.error.name === 'ValidationError'){\n              setErrorMessage(`${JSON.stringify(error.response.data.error.message)}`)\n              console.log(error.response.data.error.message)\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n              setNewName('')\n              setNewNumber('')\n            }\n            else{\n              setErrorMessage(`${updatedObject.name} was already deleted from the Phonebook`)\n              console.log(error.response.data.error.name)\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n              setPersons(persons.filter(person => person.id !== updatedObject.id))\n              setNewName('')\n              setNewNumber('')\n            }\n          })\n        }\n        else{\n          addPerson = false;\n          setNewName('')\n          setNewNumber('')\n        }\n      }   \n    }\n    \n    if(addPerson){\n      const nameObject = {name: newName, number: newNumber}\n      personService\n        .create(nameObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setMessage(`${newName} has been added to Phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setErrorMessage(`${JSON.stringify(error.response.data.error.message)}`)\n          // console.log(error.response.data)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n  \n  \n\n  const handleName = (event) => setNewName(event.target.value)\n\n  const handleNumber = (event) => setNewNumber(event.target.value)\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n    filter === '' ? setShowAll(true) : setShowAll(false) // if filter is empty showAll is true else showAll is false\n  }\n\n  const handleDelete = (id, name) => {\n    const confirm = window.confirm(`Delete ${name} ?`)\n    \n    confirm ? \n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          setErrorMessage(`${name} was deleted from the Phonebook`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n        \n       \n    : setPersons(persons)\n  }\n \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={message} />\n      <ErrorNotification errorMessage={errorMessage} />\n        <Filter text=\"filter shown with\" handleAction={handleFilter} />\n        <h3>Add a new</h3>\n      <Form addPerson={addPerson} newNumber={newNumber} handleNumber={handleNumber} newName={newName} handleName={handleName} />\n      <h2>Numbers</h2>\n        <Persons namesToShow={namesToShow} handleAction={handleDelete} />\n    </div>\n  )\n}\n\nconst SuccessNotification = ({message}) => {\n  if(message == null) {\n    return null\n  }\n\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({errorMessage}) => {\n  if(errorMessage == null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {errorMessage}\n    </div>\n  )\n}\n\nconst Person = ({name, number, handleAction}) => {\n  return(\n    <div>\n      <span>{name} {number}</span> \n      <button onClick={handleAction}>delete</button>\n    </div>\n  )\n  \n}  \n\nconst Persons = ({namesToShow, handleAction}) => {\n  return(\n    namesToShow.map((person) => <Person key={person.id} name={person.name} number={person.number} handleAction={() => handleAction(person.id, person.name)} />)\n  )\n}\n\nconst Filter = ({handleAction, text}) => {\n  return (\n    <p><span>{text}</span><input\n    onChange = {handleAction}\n    /></p>\n  )\n}\n\nconst Form = ({addPerson, newName, handleName, newNumber, handleNumber}) => {\n  return(\n    <form onSubmit = {addPerson}>\n        <div>\n          name: <input value={newName} \n                  onChange = {handleName}\n                />\n        </div>\n        <div>\n          number: <input value={newNumber}\n                  onChange={handleNumber}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}